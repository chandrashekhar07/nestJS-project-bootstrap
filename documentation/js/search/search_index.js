var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/ApplicationModule.html",[0,0.948,1,1.614]],["body/modules/ApplicationModule.html",[0,1.261,1,2.962,2,1.051,3,1.436,4,2.173,5,2.173,6,2.164,7,0.051,8,2.472,9,2.149,10,1.573,11,1.573,12,0.53,13,0.53,14,0.378,15,2.695,16,2.968,17,1.158,18,0.81,19,2.695,20,2.173,21,2.173,22,1.573,23,1.829,24,2.695,25,3.681,26,2.173,27,2.149,28,2.695,29,1.573,30,2.173,31,2.695,32,2.695,33,0.53,34,2.695,35,2.173,36,2.695,37,2.173,38,2.695,39,2.695,40,2.695,41,2.695,42,2.695,43,2.695,44,2.695,45,2.695,46,2.695,47,2.695,48,1.573,49,2.695,50,2.695,51,1.368,52,2.695,53,2.695,54,0.53,55,0.31,56,0.034,57,0.034]],["title/modules/CommonModule.html",[0,0.948,6,1.229]],["body/modules/CommonModule.html",[0,1.375,2,1.196,3,1.565,6,2.321,7,0.05,9,2.342,10,1.789,11,1.789,12,0.603,13,0.603,14,0.43,17,1.083,18,0.921,51,2.271,54,0.603,55,0.353,56,0.037,57,0.037,58,2.472,59,2.472,60,2.472,61,2.743,62,1.79,63,3.065,64,2.037,65,2.611,66,3.236,67,2.472,68,3.065]],["title/classes/HttpExceptionFilter.html",[27,1.614,55,0.318]],["body/classes/HttpExceptionFilter.html",[0,0.655,7,0.051,12,0.376,13,0.376,14,0.268,17,0.789,18,0.574,27,1.678,33,0.68,37,2.788,51,0.97,54,0.376,55,0.22,56,0.026,57,0.026,62,1.541,69,1.115,70,1.541,71,2.319,72,3.457,73,0.376,74,1.278,75,1.414,76,3.846,77,1.952,78,2.875,79,1.46,80,1.911,81,1.039,82,1.911,83,1.536,84,1.349,85,1.536,86,2.875,87,3.846,88,1.911,89,4.734,90,1.122,91,3.102,92,2.875,93,2.8,94,3.053,95,3.817,96,4.124,97,1.911,98,1.297,99,1.541,100,2.875,101,1.297,102,1.911,103,1.911,104,1.952,105,1.541,106,1.911,107,0.746,108,1.541,109,1.541,110,1.541,111,1.541,112,1.541,113,1.911,114,1.911,115,1.911,116,2.283,117,1.541,118,1.911,119,1.911,120,1.541,121,2.875,122,1.541,123,1.541,124,1.911,125,1.911,126,1.541,127,2.319,128,1.911,129,3.457,130,1.911,131,1.122,132,1.911,133,2.875,134,1.911,135,3.102,136,2.875,137,1.911,138,1.541,139,2.319,140,1.911,141,1.911,142,1.911,143,1.911,144,1.541,145,1.541,146,0.746,147,1.541,148,1.541]],["title/interfaces/IConfig.html",[149,1.614,150,1.614]],["body/interfaces/IConfig.html",[7,0.049,12,0.426,13,0.426,14,0.304,33,1.039,54,0.426,56,0.029,57,0.029,73,0.426,107,2.062,149,1.266,150,1.844,151,2.169,152,1.749,153,1.404,154,3.299,155,3.299,156,3.299,157,3.299,158,3.299,159,3.299,160,3.299,161,3.299,162,3.299,163,3.299,164,3.299,165,3.299,166,3.299,167,3.299,168,3.299,169,3.299,170,3.299,171,2.649,172,2.164,173,3.323]],["title/injectables/LogInterceptor.html",[61,1.404,174,1.404]],["body/injectables/LogInterceptor.html",[7,0.051,12,0.393,13,0.393,14,0.281,17,0.96,18,0.602,33,0.774,51,1.016,54,0.393,55,0.23,56,0.027,57,0.027,61,1.511,62,1.349,71,1.614,73,0.393,74,1.323,75,1.442,77,2.238,79,1.016,81,1.183,83,1.749,84,1.535,85,1.749,90,1.387,93,2.994,94,2.413,107,0.781,108,1.614,109,1.614,110,3.174,111,1.614,112,1.614,116,2.238,117,1.614,120,1.614,122,1.614,123,1.614,126,1.614,127,1.614,131,1.535,144,2.866,145,1.614,146,1.387,147,1.614,148,1.614,171,2.455,172,1.161,174,1.511,175,1.359,176,1.614,177,2.977,178,2.977,179,2.977,180,2.001,181,2.001,182,2.401,183,2.977,184,2.001,185,3.554,186,2.977,187,2.001,188,2.977,189,3.936,190,3.936,191,2.001,192,2.001,193,3.554,194,2.977,195,1.614,196,1.614,197,2.001,198,2.001,199,2.001,200,2.977,201,2.001,202,2.001,203,2.977,204,2.001,205,2.001,206,2.001,207,2.001,208,2.001,209,2.001,210,2.001,211,2.001,212,1.614,213,1.359,214,2.001]],["title/classes/LoggerService.html",[55,0.318,62,0.948]],["body/classes/LoggerService.html",[7,0.051,12,0.766,13,0.386,14,0.275,17,0.889,29,1.145,33,0.766,48,1.712,54,0.386,55,0.226,56,0.027,57,0.027,62,1.005,69,1.145,73,0.386,74,1.303,75,1.689,77,1.783,79,1.783,81,1.254,83,1.561,84,1.521,85,1.561,90,1.37,91,3.53,95,3.915,107,1.37,116,1.489,131,1.144,135,3.364,146,0.766,153,1.303,172,1.86,215,1.582,216,3.513,217,2.933,218,2.933,219,2.933,220,2.933,221,1.962,222,1.962,223,2.933,224,1.962,225,2.933,226,1.962,227,2.833,228,1.962,229,1.582,230,1.991,231,1.962,232,1.962,233,1.962,234,1.962,235,1.962,236,1.962,237,1.962,238,1.962,239,1.962,240,1.962,241,1.962,242,1.962,243,1.962,244,1.962,245,1.962,246,1.962,247,1.962,248,3.897,249,4.172,250,1.962,251,2.933,252,2.933,253,1.962,254,1.962,255,2.933,256,1.962,257,1.962,258,1.962,259,1.962,260,1.962,261,1.582,262,1.962,263,1.962,264,1.962,265,1.962,266,1.962,267,1.962,268,1.962,269,1.962]],["title/entities/Passenger.html",[270,1.614,271,1.079]],["body/entities/Passenger.html",[7,0.05,12,0.566,13,0.566,14,0.404,17,0.657,33,0.91,48,2.247,54,0.566,55,0.331,56,0.035,57,0.035,73,0.566,75,1.834,81,1.391,84,1.123,153,1.71,171,2.247,172,1.937,270,2.247,271,1.502,272,2.321,273,2.321,274,3.497,275,3.497,276,3.497,277,4.336,278,2.702,279,4.964,280,2.878,281,4.336,282,2.878,283,2.878,284,2.878,285,2.878,286,1.68,287,2.321,288,2.878]],["title/controllers/PassengerController.html",[289,1.079,290,1.614]],["body/controllers/PassengerController.html",[7,0.05,12,0.46,13,0.46,14,0.328,17,1.022,18,0.703,30,1.887,33,0.881,54,0.46,55,0.269,56,0.03,57,0.03,62,1.143,64,1.188,73,0.46,74,1.482,75,1.642,77,1.694,79,1.188,81,1.003,83,1.04,84,0.913,85,1.04,90,1.302,101,1.589,107,1.302,116,1.188,131,1.302,139,2.69,146,0.913,182,1.887,212,1.887,213,1.589,261,2.69,271,1.911,275,1.887,278,1.947,287,2.69,289,0.913,290,1.947,291,1.887,292,2.34,293,3.755,294,2.69,295,3.417,296,1.887,297,2.151,298,2.34,299,3.336,300,2.34,301,2.69,302,2.877,303,2.34,304,3.336,305,2.34,306,1.887,307,3.336,308,3.336,309,3.887,310,2.34,311,1.589,312,1.366,313,1.727,314,1.887,315,2.34,316,2.34,317,1.887,318,2.34,319,2.34,320,2.34,321,2.34,322,2.34,323,2.34,324,2.34,325,2.34,326,2.34,327,2.34]],["title/classes/PassengerInput.html",[55,0.318,297,1.404]],["body/classes/PassengerInput.html",[7,0.049,12,0.65,13,0.65,14,0.464,17,0.754,33,0.828,54,0.65,55,0.38,56,0.038,57,0.038,69,1.93,73,0.65,75,1.767,81,1.266,107,2.012,153,1.872,172,1.905,274,3.739,276,3.739,278,2.459,297,2.139,311,2.244,328,2.666,329,5.043,330,3.306,331,3.306]],["title/modules/PassengerModule.html",[0,0.948,8,1.404]],["body/modules/PassengerModule.html",[0,1.362,2,1.178,3,1.55,6,2.236,7,0.051,8,2.643,9,2.319,10,1.762,11,1.762,12,0.594,13,0.594,14,0.424,16,3.204,17,1.148,18,0.908,21,2.435,22,1.762,23,2.05,51,2.017,54,0.594,55,0.347,56,0.036,57,0.036,64,2.017,66,2.435,271,1.178,289,1.178,290,2.592,312,1.762,313,2.236,314,2.435,332,2.435,333,3.019,334,2.435,335,3.019,336,3.019]],["title/injectables/PassengerService.html",[174,1.404,313,1.229]],["body/injectables/PassengerService.html",[7,0.051,12,0.535,13,0.535,14,0.382,17,1.032,18,0.818,22,1.589,33,0.729,54,0.535,55,0.313,56,0.034,57,0.034,73,0.535,74,1.647,75,1.743,77,1.382,79,1.882,81,1.267,83,1.647,84,1.446,85,1.647,90,1.446,107,1.062,131,1.446,174,1.882,175,1.848,271,1.062,286,1.589,293,3.938,294,2.989,295,3.649,296,2.989,297,2.297,301,2.989,302,3.072,312,1.589,313,1.647,337,2.195,338,2.722,339,4.524,340,2.722,341,3.706,342,2.722,343,2.722,344,2.722,345,2.722,346,2.722,347,2.722]],["title/controllers/WelcomeController.html",[65,1.614,289,1.079]],["body/controllers/WelcomeController.html",[7,0.05,12,0.655,13,0.655,14,0.468,17,0.966,18,1.002,54,0.655,55,0.384,56,0.039,57,0.039,64,1.692,65,2.472,73,0.655,74,1.882,75,1.595,81,1.002,90,1.3,101,2.263,105,2.688,131,1.3,172,1.652,213,2.263,278,1.946,289,1.652,317,2.688,348,2.688,349,4.898,350,3.333,351,3.333,352,2.859,353,3.333,354,3.333,355,3.333,356,2.688]],["title/coverage.html",[357,3.021]],["body/coverage.html",[7,0.05,14,0.349,27,1.451,29,1.451,33,0.489,55,0.462,56,0.032,57,0.032,61,1.262,62,0.852,65,1.451,70,2.004,104,1.688,146,0.97,149,1.451,150,1.451,152,2.004,174,1.767,176,2.004,215,2.004,230,1.688,270,1.451,271,0.97,273,2.004,289,1.358,290,1.451,291,2.004,297,1.262,313,1.105,328,2.004,337,2.004,348,2.004,352,1.451,357,2.004,358,2.004,359,2.486,360,2.486,361,2.807,362,4.017,363,2.004,364,5.459,365,5.265,366,2.004,367,3.481,368,2.486,369,2.486,370,3.932,371,5.056,372,2.004,373,2.004,374,2.004,375,2.004,376,2.004,377,2.004,378,2.486,379,2.363,380,2.363,381,2.004,382,2.486,383,3.481,384,2.486,385,2.486]],["title/dependencies.html",[3,1.294,386,1.873]],["body/dependencies.html",[3,1.264,7,0.051,18,0.974,20,2.612,22,1.891,26,2.612,56,0.038,57,0.038,195,3.353,196,2.612,227,3.353,229,3.353,286,1.891,306,2.612,311,2.199,387,3.239,388,3.239,389,3.239,390,3.239,391,3.239,392,3.239,393,4.158,394,3.239,395,3.239,396,3.239,397,3.239,398,3.239,399,3.239,400,3.239,401,3.239,402,3.239,403,3.239,404,3.239,405,3.239,406,3.239,407,3.239,408,3.239,409,3.239,410,3.239,411,3.239,412,3.239,413,3.239,414,3.239]],["title/miscellaneous/functions.html",[415,1.356,416,2.675]],["body/miscellaneous/functions.html",[7,0.047,33,0.721,56,0.041,57,0.041,73,0.721,83,1.63,84,1.431,85,1.63,90,1.754,173,2.491,302,2.491,361,2.959,363,3.921,366,3.626,379,2.491,380,3.053,381,3.921,415,2.142,416,2.959,417,4.496,418,2.959,419,3.669,420,4.496,421,3.669]],["title/index.html",[73,0.457,422,1.873,423,1.873]],["body/index.html",[0,0.996,2,0.756,3,1.134,7,0.051,14,0.272,23,1.973,35,1.563,56,0.027,57,0.027,67,1.563,81,0.583,93,1.973,94,1.973,98,1.316,138,1.563,146,0.756,270,1.132,271,1.36,286,1.697,289,0.756,312,2.035,356,1.563,422,1.563,423,1.563,424,1.563,425,1.939,426,1.939,427,1.939,428,1.939,429,1.939,430,1.939,431,1.939,432,1.939,433,1.939,434,1.939,435,1.939,436,1.939,437,1.939,438,4.518,439,1.939,440,1.939,441,3.347,442,1.939,443,1.939,444,1.939,445,1.939,446,1.939,447,3.487,448,1.939,449,1.939,450,1.563,451,1.939,452,1.939,453,1.316,454,3.874,455,2.907,456,1.939,457,3.487,458,1.939,459,1.939,460,1.563,461,3.487,462,3.487,463,1.939,464,2.907,465,1.939,466,4.15,467,1.939,468,1.939,469,1.939,470,1.939,471,1.973,472,1.563,473,1.563,474,2.907,475,1.939,476,1.939,477,1.939,478,1.563,479,2.907,480,2.907,481,1.939,482,1.939,483,2.907,484,1.939,485,2.907,486,1.939,487,1.939,488,1.939,489,2.907,490,2.907,491,1.939,492,2.907,493,1.939,494,1.939,495,1.939,496,1.939,497,1.939,498,3.487,499,1.939,500,1.939,501,1.939,502,1.939,503,1.939,504,1.939,505,1.939,506,1.939,507,1.939,508,1.939,509,1.939,510,1.939,511,1.939,512,2.907,513,1.939,514,1.939,515,1.939,516,1.939,517,1.939,518,1.939,519,1.939]],["title/modules.html",[2,1.461]],["body/modules.html",[1,2.322,2,1.552,6,1.768,7,0.043,8,2.02,56,0.043,57,0.043,520,5.035,521,5.035,522,5.035,523,5.035]],["title/overview.html",[524,3.021]],["body/overview.html",[1,2.975,2,1.234,3,1.597,4,2.55,5,2.55,6,2.336,7,0.049,8,2.633,9,2.39,10,1.846,11,1.846,56,0.037,57,0.037,58,2.55,59,2.55,60,2.55,61,2.633,62,1.646,64,1.605,69,1.846,149,1.846,175,2.147,272,2.55,313,2.018,332,2.55,334,2.55,424,3.302,478,3.302,524,2.55,525,4.094]],["title/properties.html",[153,1.474,386,1.873]],["body/properties.html",[7,0.049,56,0.043,57,0.043,153,1.786,352,2.346,441,3.241,460,3.241,471,2.728,526,4.018,527,4.018,528,4.018,529,4.018,530,4.018,531,4.018]],["title/miscellaneous/variables.html",[415,1.356,453,2.252]],["body/miscellaneous/variables.html",[7,0.051,29,1.747,33,0.9,48,2.084,56,0.027,57,0.027,73,0.396,98,3.261,99,3.873,104,2.424,116,2.005,131,1.168,146,0.787,150,1.177,154,2.414,155,1.626,156,2.414,157,2.414,158,2.414,159,2.414,160,2.414,161,2.414,162,1.626,163,2.414,164,1.626,165,2.414,166,2.414,167,2.414,168,2.414,169,2.414,170,2.414,171,1.177,172,1.725,173,1.369,230,2.032,352,1.747,358,1.626,370,1.626,372,2.879,373,2.879,374,2.414,375,2.414,376,2.414,377,1.626,379,1.369,380,2.032,415,1.177,418,1.626,450,2.414,453,1.369,471,2.424,472,1.626,473,1.626,532,4.577,533,2.017,534,2.017,535,2.017,536,2.017,537,2.017,538,2.017,539,5.119,540,2.017,541,2.017,542,2.017,543,2.017,544,2.017,545,2.017,546,2.017,547,2.017,548,2.017,549,2.017,550,2.017,551,2.017,552,2.017,553,2.017,554,2.017,555,2.017,556,2.017,557,2.017,558,2.017,559,2.017,560,2.017,561,2.017,562,2.017,563,2.017,564,2.017,565,2.993,566,2.017,567,2.017]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":526,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":424,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.1",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.1",{"_index":425,"title":{},"body":{"index.html":{}}}],["1.19.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":440,"title":{},"body":{"index.html":{}}}],["17.1.1",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":478,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":525,"title":{},"body":{"overview.html":{}}}],["3.150.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.1",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["9.0.11",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["9.0.9",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["_.tonumber(env.api_port",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_.tonumber(env.typeorm_port",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual",{"_index":505,"title":{},"body":{"index.html":{}}}],["already",{"_index":513,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":104,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":471,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["api_default_port",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_default_prefix",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_port",{"_index":154,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["api_prefix",{"_index":155,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":308,"title":{},"body":{"controllers/PassengerController.html":{}}}],["apiproperty",{"_index":329,"title":{},"body":{"classes/PassengerInput.html":{}}}],["apiresponse",{"_index":309,"title":{},"body":{"controllers/PassengerController.html":{}}}],["apitags",{"_index":310,"title":{},"body":{"controllers/PassengerController.html":{}}}],["apitags('passenger",{"_index":316,"title":{},"body":{"controllers/PassengerController.html":{}}}],["app",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.module.ts",{"_index":488,"title":{},"body":{"index.html":{}}}],["app_filter",{"_index":25,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["application",{"_index":461,"title":{},"body":{"index.html":{}}}],["applicationmodule",{"_index":1,"title":{"modules/ApplicationModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":87,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":293,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["author",{"_index":528,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":47,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["await",{"_index":324,"title":{},"body":{"controllers/PassengerController.html":{}}}],["aws",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["aws_access_key",{"_index":156,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["aws_region",{"_index":157,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["aws_secret_key",{"_index":158,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["awsaccesskeyid",{"_index":241,"title":{},"body":{"classes/LoggerService.html":{}}}],["awsregion",{"_index":245,"title":{},"body":{"classes/LoggerService.html":{}}}],["awssecretkey",{"_index":243,"title":{},"body":{"classes/LoggerService.html":{}}}],["before",{"_index":427,"title":{},"body":{"index.html":{}}}],["below",{"_index":464,"title":{},"body":{"index.html":{}}}],["body",{"_index":306,"title":{},"body":{"controllers/PassengerController.html":{},"dependencies.html":{}}}],["boolean",{"_index":173,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":114,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["browse",{"_index":523,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":520,"title":{},"body":{"modules.html":{}}}],["build",{"_index":356,"title":{},"body":{"controllers/WelcomeController.html":{},"index.html":{}}}],["callhandler",{"_index":190,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["catch",{"_index":76,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":86,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["chandra",{"_index":529,"title":{},"body":{"properties.html":{}}}],["change",{"_index":500,"title":{},"body":{"index.html":{}}}],["class",{"_index":55,"title":{"classes/HttpExceptionFilter.html":{},"classes/LoggerService.html":{},"classes/PassengerInput.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"coverage.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/LoggerService.html":{},"classes/PassengerInput.html":{},"overview.html":{}}}],["cloud",{"_index":234,"title":{},"body":{"classes/LoggerService.html":{}}}],["cloudwatch",{"_index":229,"title":{},"body":{"classes/LoggerService.html":{},"dependencies.html":{}}}],["cloudwatch_group_name",{"_index":159,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["cloudwatch_log_stream_name",{"_index":160,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["cloudwatchconfig",{"_index":233,"title":{},"body":{"classes/LoggerService.html":{}}}],["cluster_applicationmodule",{"_index":4,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_applicationmodule_imports",{"_index":5,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":58,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":60,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":59,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_passengermodule",{"_index":332,"title":{},"body":{"modules/PassengerModule.html":{},"overview.html":{}}}],["cluster_passengermodule_imports",{"_index":333,"title":{},"body":{"modules/PassengerModule.html":{}}}],["cluster_passengermodule_providers",{"_index":334,"title":{},"body":{"modules/PassengerModule.html":{},"overview.html":{}}}],["column",{"_index":279,"title":{},"body":{"entities/Passenger.html":{}}}],["column({nullable",{"_index":284,"title":{},"body":{"entities/Passenger.html":{}}}],["command",{"_index":463,"title":{},"body":{"index.html":{}}}],["commands",{"_index":512,"title":{},"body":{"index.html":{}}}],["common",{"_index":23,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/PassengerModule.html":{},"index.html":{}}}],["common/exception.filter",{"_index":28,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["common/providers",{"_index":30,"title":{},"body":{"modules/ApplicationModule.html":{},"controllers/PassengerController.html":{}}}],["commonmodule",{"_index":6,"title":{"modules/CommonModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"modules.html":{},"overview.html":{}}}],["components",{"_index":432,"title":{},"body":{"index.html":{}}}],["config.provider",{"_index":232,"title":{},"body":{"classes/LoggerService.html":{}}}],["configmodule",{"_index":19,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configmodule.forroot",{"_index":31,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider",{"_index":29,"title":{},"body":{"modules/ApplicationModule.html":{},"classes/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configprovider().aws_access_key",{"_index":242,"title":{},"body":{"classes/LoggerService.html":{}}}],["configprovider().aws_region",{"_index":246,"title":{},"body":{"classes/LoggerService.html":{}}}],["configprovider().aws_secret_key",{"_index":244,"title":{},"body":{"classes/LoggerService.html":{}}}],["configprovider().cloudwatch_group_name",{"_index":238,"title":{},"body":{"classes/LoggerService.html":{}}}],["configprovider().cloudwatch_log_stream_name",{"_index":240,"title":{},"body":{"classes/LoggerService.html":{}}}],["configprovider().typeorm_database",{"_index":36,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_host",{"_index":38,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_migrations_auto_run",{"_index":50,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_password",{"_index":44,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_port",{"_index":40,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_synchronize",{"_index":46,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configprovider().typeorm_username",{"_index":42,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["configuration",{"_index":442,"title":{},"body":{"index.html":{}}}],["configure",{"_index":448,"title":{},"body":{"index.html":{}}}],["const",{"_index":116,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":79,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["constructor(logger",{"_index":180,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["constructor(loggerservice",{"_index":80,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constructor(passengerrepository",{"_index":338,"title":{},"body":{"injectables/PassengerService.html":{}}}],["constructor(private",{"_index":199,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["containing",{"_index":451,"title":{},"body":{"index.html":{}}}],["contains",{"_index":489,"title":{},"body":{"index.html":{}}}],["context",{"_index":192,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["context.switchtohttp",{"_index":201,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["controller",{"_index":289,"title":{"controllers/PassengerController.html":{},"controllers/WelcomeController.html":{}},"body":{"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"controllers/WelcomeController.html":{},"coverage.html":{},"index.html":{}}}],["controller('passengers",{"_index":315,"title":{},"body":{"controllers/PassengerController.html":{}}}],["controllers",{"_index":64,"title":{},"body":{"modules/CommonModule.html":{},"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"controllers/WelcomeController.html":{},"overview.html":{}}}],["coverage",{"_index":357,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":294,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["create(@body",{"_index":323,"title":{},"body":{"controllers/PassengerController.html":{}}}],["create(input",{"_index":296,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["created",{"_index":486,"title":{},"body":{"index.html":{}}}],["createswagger",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creating",{"_index":449,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":117,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["ctx.getrequest",{"_index":120,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["ctx.getresponse",{"_index":119,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse().statuscode",{"_index":202,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["data",{"_index":212,"title":{},"body":{"injectables/LogInterceptor.html":{},"controllers/PassengerController.html":{}}}],["database",{"_index":35,"title":{},"body":{"modules/ApplicationModule.html":{},"index.html":{}}}],["date",{"_index":435,"title":{},"body":{"index.html":{}}}],["date().gettime",{"_index":200,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["date().toisostring",{"_index":147,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["decorators",{"_index":278,"title":{},"body":{"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"controllers/WelcomeController.html":{}}}],["default",{"_index":98,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":81,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":527,"title":{},"body":{"properties.html":{}}}],["dev",{"_index":519,"title":{},"body":{"index.html":{}}}],["development",{"_index":455,"title":{},"body":{"index.html":{}}}],["devyou",{"_index":467,"title":{},"body":{"index.html":{}}}],["directory",{"_index":483,"title":{},"body":{"index.html":{}}}],["disable",{"_index":109,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["discover",{"_index":458,"title":{},"body":{"index.html":{}}}],["docs",{"_index":473,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":121,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["endpoint",{"_index":477,"title":{},"body":{"index.html":{}}}],["entities",{"_index":272,"title":{},"body":{"entities/Passenger.html":{},"overview.html":{}}}],["entity",{"_index":270,"title":{"entities/Passenger.html":{}},"body":{"entities/Passenger.html":{},"coverage.html":{},"index.html":{}}}],["env",{"_index":450,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["env.api_prefix",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.aws_access_key",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.aws_region",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.aws_secret_key",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.cloudwatch_group_name",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.cloudwatch_log_stream_name",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.swagger_enable",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.trim",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_connection",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_database",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_entities",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_host",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_migrations_auto_run",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_password",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_synchronize",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.typeorm_username",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env1.3",{"_index":456,"title":{},"body":{"index.html":{}}}],["environment",{"_index":452,"title":{},"body":{"index.html":{}}}],["environment.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":95,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["error(`configuration",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(message",{"_index":220,"title":{},"body":{"classes/LoggerService.html":{}}}],["eslint",{"_index":108,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["eslint/explicit",{"_index":113,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["eslint/no",{"_index":210,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["everything",{"_index":499,"title":{},"body":{"index.html":{}}}],["example",{"_index":474,"title":{},"body":{"index.html":{}}}],["exception",{"_index":89,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":141,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.hasownproperty('response",{"_index":128,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":136,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.status",{"_index":125,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception?.message",{"_index":130,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception['response'].hasownproperty('error",{"_index":132,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception['response']['error",{"_index":134,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception['response']['message",{"_index":133,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":72,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":189,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["explicit",{"_index":211,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["export",{"_index":54,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/CommonModule.html":{},"modules/PassengerModule.html":{}}}],["express",{"_index":195,"title":{},"body":{"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["false",{"_index":261,"title":{},"body":{"classes/LoggerService.html":{},"controllers/PassengerController.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":295,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["firstname",{"_index":274,"title":{},"body":{"entities/Passenger.html":{},"classes/PassengerInput.html":{}}}],["flow",{"_index":498,"title":{},"body":{"index.html":{}}}],["format",{"_index":251,"title":{},"body":{"classes/LoggerService.html":{}}}],["forwardref",{"_index":102,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["function",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":416,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get()@httpcode(httpstatus.ok)@apiresponse({status",{"_index":303,"title":{},"body":{"controllers/PassengerController.html":{}}}],["gettimedelta",{"_index":177,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["gettimedelta(starttime",{"_index":183,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["getting",{"_index":422,"title":{"index.html":{}},"body":{"index.html":{}}}],["geturl",{"_index":178,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["geturl(request",{"_index":186,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["guards",{"_index":491,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["head",{"_index":468,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":37,"title":{},"body":{"modules/ApplicationModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":118,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["http://localhost:4000/api/v1/passengers",{"_index":476,"title":{},"body":{"index.html":{}}}],["http://localhost:4000/docs",{"_index":469,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":213,"title":{},"body":{"injectables/LogInterceptor.html":{},"controllers/PassengerController.html":{},"controllers/WelcomeController.html":{}}}],["httpcode(httpstatus.created",{"_index":321,"title":{},"body":{"controllers/PassengerController.html":{}}}],["httpcode(httpstatus.ok",{"_index":317,"title":{},"body":{"controllers/PassengerController.html":{},"controllers/WelcomeController.html":{}}}],["httpexception",{"_index":100,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":27,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/ApplicationModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpstatus",{"_index":101,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/PassengerController.html":{},"controllers/WelcomeController.html":{}}}],["httpstatus.bad_request",{"_index":142,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus.created",{"_index":322,"title":{},"body":{"controllers/PassengerController.html":{}}}],["httpstatus.ok",{"_index":318,"title":{},"body":{"controllers/PassengerController.html":{}}}],["iconfig",{"_index":150,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":275,"title":{},"body":{"entities/Passenger.html":{},"controllers/PassengerController.html":{}}}],["identifier",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":71,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/PassengerModule.html":{}}}],["included",{"_index":514,"title":{},"body":{"index.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["info(message",{"_index":223,"title":{},"body":{"classes/LoggerService.html":{}}}],["inject",{"_index":103,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["inject(forwardref",{"_index":106,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["injectable",{"_index":174,"title":{"injectables/LogInterceptor.html":{},"injectables/PassengerService.html":{}},"body":{"injectables/LogInterceptor.html":{},"injectables/PassengerService.html":{},"coverage.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/LogInterceptor.html":{},"injectables/PassengerService.html":{},"overview.html":{}}}],["injectrepository",{"_index":344,"title":{},"body":{"injectables/PassengerService.html":{}}}],["injectrepository(passenger",{"_index":345,"title":{},"body":{"injectables/PassengerService.html":{}}}],["input",{"_index":301,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["installed",{"_index":446,"title":{},"body":{"index.html":{}}}],["installing",{"_index":444,"title":{},"body":{"index.html":{}}}],["installonce",{"_index":445,"title":{},"body":{"index.html":{}}}],["instance",{"_index":216,"title":{},"body":{"classes/LoggerService.html":{}}}],["instanceof",{"_index":140,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["intercept",{"_index":179,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["intercept(context",{"_index":188,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interceptors",{"_index":67,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["interface",{"_index":149,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":151,"title":{},"body":{"interfaces/IConfig.html":{}}}],["internal",{"_index":137,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["isarray",{"_index":304,"title":{},"body":{"controllers/PassengerController.html":{}}}],["isdeploymentenv",{"_index":230,"title":{},"body":{"classes/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isproductionenv",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["joi.object().unknown().keys",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":276,"title":{},"body":{"entities/Passenger.html":{},"classes/PassengerInput.html":{}}}],["launch",{"_index":457,"title":{},"body":{"index.html":{}}}],["level",{"_index":248,"title":{},"body":{"classes/LoggerService.html":{}}}],["line",{"_index":111,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["located",{"_index":475,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":236,"title":{},"body":{"classes/LoggerService.html":{}}}],["logger",{"_index":182,"title":{},"body":{"injectables/LogInterceptor.html":{},"controllers/PassengerController.html":{}}}],["loggerservice",{"_index":62,"title":{"classes/LoggerService.html":{}},"body":{"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"coverage.html":{},"overview.html":{}}}],["loggroupname",{"_index":237,"title":{},"body":{"classes/LoggerService.html":{}}}],["login",{"_index":349,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["loginterceptor",{"_index":61,"title":{"injectables/LogInterceptor.html":{}},"body":{"modules/CommonModule.html":{},"injectables/LogInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["logs",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["logstreamname",{"_index":239,"title":{},"body":{"classes/LoggerService.html":{}}}],["made",{"_index":481,"title":{},"body":{"index.html":{}}}],["make",{"_index":429,"title":{},"body":{"index.html":{}}}],["manages",{"_index":495,"title":{},"body":{"index.html":{}}}],["map",{"_index":197,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["map((data",{"_index":205,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["matching",{"_index":57,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":135,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["messageformatter",{"_index":247,"title":{},"body":{"classes/LoggerService.html":{}}}],["message}\\n",{"_index":250,"title":{},"body":{"classes/LoggerService.html":{}}}],["metadata",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":74,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["middlename",{"_index":277,"title":{},"body":{"entities/Passenger.html":{}}}],["migration:create",{"_index":487,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":485,"title":{},"body":{"index.html":{}}}],["migrationsrun",{"_index":49,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["miscellaneous",{"_index":415,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":312,"title":{},"body":{"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"index.html":{}}}],["models/constants",{"_index":105,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/WelcomeController.html":{}}}],["module",{"_index":0,"title":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/PassengerModule.html":{},"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":84,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"miscellaneous/functions.html":{}}}],["nestinterceptor",{"_index":194,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["nestjs",{"_index":460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":20,"title":{},"body":{"modules/ApplicationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":26,"title":{},"body":{"modules/ApplicationModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":311,"title":{},"body":{"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":22,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"dependencies.html":{}}}],["neupane",{"_index":531,"title":{},"body":{"properties.html":{}}}],["new",{"_index":146,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":110,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["next.handle().pipe",{"_index":204,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["node",{"_index":518,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":437,"title":{},"body":{"index.html":{}}}],["now",{"_index":447,"title":{},"body":{"index.html":{}}}],["npm",{"_index":438,"title":{},"body":{"index.html":{}}}],["null",{"_index":96,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["nullable",{"_index":288,"title":{},"body":{"entities/Passenger.html":{}}}],["number",{"_index":171,"title":{},"body":{"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"entities/Passenger.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":193,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["optional",{"_index":85,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"overview.html":{}}}],["overview",{"_index":524,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":386,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":83,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["passenger",{"_index":271,"title":{"entities/Passenger.html":{}},"body":{"entities/Passenger.html":{},"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"coverage.html":{},"index.html":{}}}],["passenger.controller.ts",{"_index":497,"title":{},"body":{"index.html":{}}}],["passenger.data.ts",{"_index":502,"title":{},"body":{"index.html":{}}}],["passenger.entity.ts",{"_index":504,"title":{},"body":{"index.html":{}}}],["passenger.id",{"_index":327,"title":{},"body":{"controllers/PassengerController.html":{}}}],["passenger.input.ts",{"_index":506,"title":{},"body":{"index.html":{}}}],["passenger.module.ts",{"_index":507,"title":{},"body":{"index.html":{}}}],["passenger.pipe.ts",{"_index":501,"title":{},"body":{"index.html":{}}}],["passenger.service.ts",{"_index":508,"title":{},"body":{"index.html":{}}}],["passenger/passenger.module",{"_index":24,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["passengercontroller",{"_index":290,"title":{"controllers/PassengerController.html":{}},"body":{"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"coverage.html":{}}}],["passengerinput",{"_index":297,"title":{"classes/PassengerInput.html":{}},"body":{"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{},"coverage.html":{}}}],["passengermodule",{"_index":8,"title":{"modules/PassengerModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/PassengerModule.html":{},"modules.html":{},"overview.html":{}}}],["passengerrepository",{"_index":341,"title":{},"body":{"injectables/PassengerService.html":{}}}],["passengers",{"_index":287,"title":{},"body":{"entities/Passenger.html":{},"controllers/PassengerController.html":{}}}],["passengerservice",{"_index":313,"title":{"injectables/PassengerService.html":{}},"body":{"controllers/PassengerController.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"coverage.html":{},"overview.html":{}}}],["password",{"_index":43,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["path",{"_index":148,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["pg",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["pipes",{"_index":490,"title":{},"body":{"index.html":{}}}],["port",{"_index":39,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["post",{"_index":307,"title":{},"body":{"controllers/PassengerController.html":{}}}],["post()@httpcode(httpstatus.created)@apiresponse({status",{"_index":298,"title":{},"body":{"controllers/PassengerController.html":{}}}],["postgres",{"_index":34,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["postgresql",{"_index":439,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":292,"title":{},"body":{"controllers/PassengerController.html":{}}}],["primarygeneratedcolumn",{"_index":281,"title":{},"body":{"entities/Passenger.html":{}}}],["private",{"_index":77,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{}}}],["process.env",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":441,"title":{},"body":{"index.html":{},"properties.html":{}}}],["promise",{"_index":302,"title":{},"body":{"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":153,"title":{"properties.html":{}},"body":{"interfaces/IConfig.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"classes/PassengerInput.html":{},"properties.html":{}}}],["provide",{"_index":52,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["provider",{"_index":493,"title":{},"body":{"index.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/PassengerModule.html":{}}}],["public",{"_index":75,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["quickly",{"_index":515,"title":{},"body":{"index.html":{}}}],["raiseexception",{"_index":78,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["raiseexception(request",{"_index":92,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["readonly",{"_index":107,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{}}}],["ready",{"_index":459,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":436,"title":{},"body":{"index.html":{}}}],["repository",{"_index":339,"title":{},"body":{"injectables/PassengerService.html":{}}}],["request",{"_index":93,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"index.html":{}}}],["request.ip",{"_index":208,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["request.method",{"_index":126,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["request.protocol}://${request.get('host')}${request.originalurl",{"_index":214,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["request.url",{"_index":127,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["request.user",{"_index":122,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["request.user.sub",{"_index":123,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["requirements",{"_index":426,"title":{},"body":{"index.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"overview.html":{}}}],["resources",{"_index":496,"title":{},"body":{"index.html":{}}}],["response",{"_index":94,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"index.html":{}}}],["response.status(status).json",{"_index":143,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.error",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.error.message",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":131,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":503,"title":{},"body":{"index.html":{}}}],["returns",{"_index":90,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/PassengerController.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{},"miscellaneous/functions.html":{}}}],["run",{"_index":466,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":198,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["sdk/client",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":470,"title":{},"body":{"index.html":{}}}],["server",{"_index":138,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{}}}],["server.ts3",{"_index":511,"title":{},"body":{"index.html":{}}}],["service",{"_index":492,"title":{},"body":{"index.html":{}}}],["services",{"_index":314,"title":{},"body":{"controllers/PassengerController.html":{},"modules/PassengerModule.html":{}}}],["shekhar",{"_index":530,"title":{},"body":{"properties.html":{}}}],["silent",{"_index":260,"title":{},"body":{"classes/LoggerService.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"modules/PassengerModule.html":{},"injectables/PassengerService.html":{},"controllers/WelcomeController.html":{}}}],["spec",{"_index":509,"title":{},"body":{"index.html":{}}}],["src",{"_index":484,"title":{},"body":{"index.html":{}}}],["src/.../check",{"_index":418,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.provider.ts",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/app.module.ts",{"_index":15,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["src/modules/common/common.module.ts",{"_index":63,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/modules/common/exception.filter.ts",{"_index":70,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/modules/common/exception.filter.ts:14",{"_index":82,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/modules/common/exception.filter.ts:21",{"_index":88,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/modules/common/exception.filter.ts:50",{"_index":97,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/modules/common/interceptors/log.interceptor.ts",{"_index":176,"title":{},"body":{"injectables/LogInterceptor.html":{},"coverage.html":{}}}],["src/modules/common/interceptors/log.interceptor.ts:13",{"_index":181,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/modules/common/interceptors/log.interceptor.ts:16",{"_index":191,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/modules/common/interceptors/log.interceptor.ts:43",{"_index":184,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/modules/common/interceptors/log.interceptor.ts:47",{"_index":187,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/modules/common/interfaces/config.interface.ts",{"_index":152,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{}}}],["src/modules/common/models/constants.ts",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/providers/config.provider.ts",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/providers/logger.service.ts",{"_index":215,"title":{},"body":{"classes/LoggerService.html":{},"coverage.html":{}}}],["src/modules/common/providers/logger.service.ts:51",{"_index":224,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/modules/common/providers/logger.service.ts:55",{"_index":226,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/modules/common/providers/logger.service.ts:59",{"_index":221,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/modules/common/providers/logger.service.ts:7",{"_index":218,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/modules/common/utilities/check",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/common/welcome.controller.ts",{"_index":348,"title":{},"body":{"controllers/WelcomeController.html":{},"coverage.html":{}}}],["src/modules/common/welcome.controller.ts:16",{"_index":351,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["src/modules/passenger/controller/passenger.controller.ts",{"_index":291,"title":{},"body":{"controllers/PassengerController.html":{},"coverage.html":{}}}],["src/modules/passenger/controller/passenger.controller.ts:19",{"_index":305,"title":{},"body":{"controllers/PassengerController.html":{}}}],["src/modules/passenger/controller/passenger.controller.ts:27",{"_index":300,"title":{},"body":{"controllers/PassengerController.html":{}}}],["src/modules/passenger/model/passenger.entity.ts",{"_index":273,"title":{},"body":{"entities/Passenger.html":{},"coverage.html":{}}}],["src/modules/passenger/model/passenger.entity.ts:12",{"_index":285,"title":{},"body":{"entities/Passenger.html":{}}}],["src/modules/passenger/model/passenger.entity.ts:15",{"_index":283,"title":{},"body":{"entities/Passenger.html":{}}}],["src/modules/passenger/model/passenger.entity.ts:6",{"_index":282,"title":{},"body":{"entities/Passenger.html":{}}}],["src/modules/passenger/model/passenger.entity.ts:9",{"_index":280,"title":{},"body":{"entities/Passenger.html":{}}}],["src/modules/passenger/model/passenger.input.ts",{"_index":328,"title":{},"body":{"classes/PassengerInput.html":{},"coverage.html":{}}}],["src/modules/passenger/model/passenger.input.ts:5",{"_index":330,"title":{},"body":{"classes/PassengerInput.html":{}}}],["src/modules/passenger/model/passenger.input.ts:8",{"_index":331,"title":{},"body":{"classes/PassengerInput.html":{}}}],["src/modules/passenger/passenger.module.ts",{"_index":335,"title":{},"body":{"modules/PassengerModule.html":{}}}],["src/modules/passenger/services/passenger.service.ts",{"_index":337,"title":{},"body":{"injectables/PassengerService.html":{},"coverage.html":{}}}],["src/modules/passenger/services/passenger.service.ts:13",{"_index":343,"title":{},"body":{"injectables/PassengerService.html":{}}}],["src/modules/passenger/services/passenger.service.ts:17",{"_index":342,"title":{},"body":{"injectables/PassengerService.html":{}}}],["src/modules/passenger/services/passenger.service.ts:7",{"_index":340,"title":{},"body":{"injectables/PassengerService.html":{}}}],["stack",{"_index":249,"title":{},"body":{"classes/LoggerService.html":{}}}],["staging",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":443,"title":{},"body":{"index.html":{}}}],["started",{"_index":423,"title":{"index.html":{}},"body":{"index.html":{}}}],["starting",{"_index":428,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":185,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["statements",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":139,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/PassengerController.html":{}}}],["statuscode",{"_index":144,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["stderrlevels",{"_index":264,"title":{},"body":{"classes/LoggerService.html":{}}}],["string",{"_index":172,"title":{},"body":{"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"classes/PassengerInput.html":{},"controllers/WelcomeController.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":479,"title":{},"body":{"index.html":{}}}],["support",{"_index":521,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":430,"title":{},"body":{"index.html":{}}}],["svg",{"_index":522,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":472,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["swagger_description",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_enable",{"_index":161,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["swagger_prefix",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_title",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":45,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["table",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":480,"title":{},"body":{"index.html":{}}}],["test",{"_index":516,"title":{},"body":{"index.html":{}}}],["this.gettimedelta(starttime)}ms",{"_index":207,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.geturl(request",{"_index":209,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.instance",{"_index":258,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.add(new",{"_index":265,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.error(message",{"_index":269,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.info(message",{"_index":267,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.warn(message",{"_index":268,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.logger.info",{"_index":206,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.logger.info('getting",{"_index":319,"title":{},"body":{"controllers/PassengerController.html":{}}}],["this.logger.info(`created",{"_index":326,"title":{},"body":{"controllers/PassengerController.html":{}}}],["this.loggerservice.error",{"_index":124,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.passengerrepository.find",{"_index":346,"title":{},"body":{"injectables/PassengerService.html":{}}}],["this.passengerrepository.save",{"_index":347,"title":{},"body":{"injectables/PassengerService.html":{}}}],["this.passengerservice.create(input",{"_index":325,"title":{},"body":{"controllers/PassengerController.html":{}}}],["this.passengerservice.find",{"_index":320,"title":{},"body":{"controllers/PassengerController.html":{}}}],["this.raiseexception(request",{"_index":129,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["those",{"_index":431,"title":{},"body":{"index.html":{}}}],["throw",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":145,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["tokens.ts",{"_index":510,"title":{},"body":{"index.html":{}}}],["transports",{"_index":262,"title":{},"body":{"classes/LoggerService.html":{}}}],["true",{"_index":48,"title":{},"body":{"modules/ApplicationModule.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":517,"title":{},"body":{"index.html":{}}}],["tsnode",{"_index":465,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"modules/ApplicationModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"entities/Passenger.html":{},"controllers/PassengerController.html":{},"classes/PassengerInput.html":{},"injectables/PassengerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":286,"title":{},"body":{"entities/Passenger.html":{},"injectables/PassengerService.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm_connection",{"_index":162,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_database",{"_index":163,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_entities",{"_index":164,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_host",{"_index":165,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_migrations_auto_run",{"_index":166,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_password",{"_index":167,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_port",{"_index":168,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_synchronize",{"_index":169,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeorm_username",{"_index":170,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":21,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/PassengerModule.html":{}}}],["typeormmodule.forfeature([passenger",{"_index":336,"title":{},"body":{"modules/PassengerModule.html":{}}}],["typeormmodule.forroot",{"_index":32,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["types",{"_index":115,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["typescript",{"_index":112,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LogInterceptor.html":{}}}],["undefined",{"_index":299,"title":{},"body":{"controllers/PassengerController.html":{}}}],["up",{"_index":434,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":53,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["used",{"_index":454,"title":{},"body":{"index.html":{}}}],["userid",{"_index":203,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["username",{"_index":41,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["using",{"_index":462,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":231,"title":{},"body":{"classes/LoggerService.html":{}}}],["valid",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationschema",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationschema.validate(env",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":99,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":453,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":352,"title":{},"body":{"controllers/WelcomeController.html":{},"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version(version_neutral",{"_index":354,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["version(version_neutral)@get()@httpcode(httpstatus.ok",{"_index":350,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["version_neutral",{"_index":353,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["void",{"_index":91,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["warn",{"_index":217,"title":{},"body":{"classes/LoggerService.html":{}}}],["warn(message",{"_index":225,"title":{},"body":{"classes/LoggerService.html":{}}}],["watch",{"_index":235,"title":{},"body":{"classes/LoggerService.html":{}}}],["welcome",{"_index":355,"title":{},"body":{"controllers/WelcomeController.html":{}}}],["welcome.controller",{"_index":68,"title":{},"body":{"modules/CommonModule.html":{}}}],["welcomecontroller",{"_index":65,"title":{"controllers/WelcomeController.html":{}},"body":{"modules/CommonModule.html":{},"controllers/WelcomeController.html":{},"coverage.html":{}}}],["well",{"_index":482,"title":{},"body":{"index.html":{}}}],["whole",{"_index":494,"title":{},"body":{"index.html":{}}}],["winston",{"_index":227,"title":{},"body":{"classes/LoggerService.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":259,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.colorize",{"_index":256,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.combine",{"_index":252,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.errors",{"_index":255,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.json",{"_index":254,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.simple",{"_index":257,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.timestamp",{"_index":253,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.logger",{"_index":219,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.transports.console",{"_index":263,"title":{},"body":{"classes/LoggerService.html":{}}}],["winstoncloudwatch",{"_index":228,"title":{},"body":{"classes/LoggerService.html":{}}}],["winstoncloudwatch(cloudwatchconfig",{"_index":266,"title":{},"body":{"classes/LoggerService.html":{}}}],["workstation",{"_index":433,"title":{},"body":{"index.html":{}}}],["yes",{"_index":222,"title":{},"body":{"classes/LoggerService.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CommonModule.html":{},"modules/PassengerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/ApplicationModule.html":{"url":"modules/ApplicationModule.html","title":"module - ApplicationModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nCommonModule->ApplicationModule\n\n\n\n\n\nPassengerModule\n\nPassengerModule\n\nApplicationModule -->\n\nPassengerModule->ApplicationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            PassengerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommonModule } from './common';\nimport { PassengerModule } from './passenger/passenger.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { HttpExceptionFilter } from './common/exception.filter';\nimport { configProvider } from './common/providers';\n\n@Module({\n    imports: [\n        ConfigModule.forRoot(),\n        TypeOrmModule.forRoot({\n            type: 'postgres',\n            database: configProvider().TYPEORM_DATABASE,\n            host: configProvider().TYPEORM_HOST,\n            port: configProvider().TYPEORM_PORT,\n            username: configProvider().TYPEORM_USERNAME,\n            password: configProvider().TYPEORM_PASSWORD,\n            synchronize: configProvider().TYPEORM_SYNCHRONIZE,\n            autoLoadEntities: true,\n            migrationsRun: configProvider().TYPEORM_MIGRATIONS_AUTO_RUN\n        }),\n        PassengerModule,\n        CommonModule\n    ],\n    providers: [\n        {\n            provide: APP_FILTER,\n            useClass: HttpExceptionFilter\n        }\n    ]\n})\nexport class ApplicationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nLogInterceptor \n\nLogInterceptor \n\n\n\nLoggerService \n\nLoggerService \n\n\n\nCommonModule\n\nCommonModule\n\nLogInterceptor  -->\n\nCommonModule->LogInterceptor \n\n\n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\n\n\nLogInterceptor\n\nLogInterceptor\n\nCommonModule -->\n\nLogInterceptor->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogInterceptor\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WelcomeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogInterceptor\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LogInterceptor } from './interceptors';\nimport { LoggerService } from './providers';\nimport { WelcomeController } from './welcome.controller';\n\n@Module({\n    providers: [LoggerService, LogInterceptor],\n    exports: [LoggerService, LogInterceptor],\n    controllers: [WelcomeController]\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Private\n                                raiseException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/exception.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/exception.filter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        raiseException\n                        \n                    \n                \n            \n            \n                \n                    \n                    raiseException(request: Request, response, exception, error: null)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/exception.filter.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ExceptionFilter,\n    Catch,\n    ArgumentsHost,\n    HttpException,\n    HttpStatus,\n    forwardRef,\n    Inject\n} from '@nestjs/common';\nimport { ANONYMOUS } from './models/constants';\nimport { LoggerService } from './providers';\n\n@Catch()\nexport class HttpExceptionFilter implements ExceptionFilter {\n    public constructor(\n        @Inject(forwardRef(() => LoggerService))\n        private readonly loggerService: LoggerService\n    ) {}\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    public catch(exception: any, host: ArgumentsHost): void {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const email = request.user ? request.user.sub : ANONYMOUS;\n\n        this.loggerService.error(\n            `${email} ${exception.status} ${request.method} ${request.url}`,\n            exception\n        );\n\n        if (!exception.hasOwnProperty('response')) {\n            this.raiseException(request, response, exception, exception?.message);\n\n            return;\n        }\n\n        if (exception['response'].hasOwnProperty('error')) {\n            const error = exception['response']['message']\n                ? exception['response']['message']\n                : exception['response']['error'];\n            this.raiseException(request, response, exception, error);\n\n            return;\n        }\n\n        this.raiseException(request, response, exception);\n    }\n\n    private raiseException(request: Request, response, exception, error = null): void {\n        const message = exception.message ? exception.message : 'Internal server error';\n\n        const status =\n            exception instanceof HttpException\n                ? exception.getStatus()\n                : HttpStatus.BAD_REQUEST;\n\n        response.status(status).json({\n            statusCode: status,\n            timestamp: new Date().toISOString(),\n            path: request.url,\n            message: message,\n            error: error !== null ? error : message\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            API_PORT\n                                        \n                                \n                                \n                                        \n                                            API_PREFIX\n                                        \n                                \n                                \n                                        \n                                            AWS_ACCESS_KEY\n                                        \n                                \n                                \n                                        \n                                            AWS_REGION\n                                        \n                                \n                                \n                                        \n                                            AWS_SECRET_KEY\n                                        \n                                \n                                \n                                        \n                                            CLOUDWATCH_GROUP_NAME\n                                        \n                                \n                                \n                                        \n                                            CLOUDWATCH_LOG_STREAM_NAME\n                                        \n                                \n                                \n                                        \n                                            SWAGGER_ENABLE\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_CONNECTION\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_DATABASE\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_ENTITIES\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_HOST\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_MIGRATIONS_AUTO_RUN\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_PORT\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_SYNCHRONIZE\n                                        \n                                \n                                \n                                        \n                                            TYPEORM_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        API_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        API_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        API_PREFIX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        API_PREFIX:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_ACCESS_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_ACCESS_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_REGION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_REGION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_SECRET_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_SECRET_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CLOUDWATCH_GROUP_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLOUDWATCH_GROUP_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CLOUDWATCH_LOG_STREAM_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLOUDWATCH_LOG_STREAM_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SWAGGER_ENABLE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SWAGGER_ENABLE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_CONNECTION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_CONNECTION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_DATABASE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_DATABASE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_ENTITIES\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_ENTITIES:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_MIGRATIONS_AUTO_RUN\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_MIGRATIONS_AUTO_RUN:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_SYNCHRONIZE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_SYNCHRONIZE:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPEORM_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPEORM_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n    readonly API_PORT: number;\n\n    readonly API_PREFIX: string;\n\n    readonly SWAGGER_ENABLE: boolean;\n\n    readonly TYPEORM_CONNECTION: string;\n\n    readonly TYPEORM_HOST: string;\n\n    readonly TYPEORM_PORT: number;\n\n    readonly TYPEORM_USERNAME: string;\n\n    readonly TYPEORM_PASSWORD: string;\n\n    readonly TYPEORM_DATABASE: string;\n\n    readonly TYPEORM_ENTITIES: string;\n\n    readonly TYPEORM_SYNCHRONIZE: boolean;\n\n    readonly TYPEORM_MIGRATIONS_AUTO_RUN: boolean;\n\n    readonly CLOUDWATCH_GROUP_NAME: string;\n    readonly CLOUDWATCH_LOG_STREAM_NAME: string;\n    readonly AWS_ACCESS_KEY: string;\n    readonly AWS_SECRET_KEY: string;\n    readonly AWS_REGION: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogInterceptor.html":{"url":"injectables/LogInterceptor.html","title":"injectable - LogInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/interceptors/log.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getTimeDelta\n                            \n                            \n                                    Private\n                                getUrl\n                            \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/interceptors/log.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTimeDelta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeDelta(startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/interceptors/log.interceptor.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/interceptors/log.interceptor.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/interceptors/log.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    NestInterceptor\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LoggerService } from '../providers';\n\n@Injectable()\nexport class LogInterceptor implements NestInterceptor {\n    public constructor(private readonly logger: LoggerService) {}\n\n    public intercept(context: ExecutionContext, next: CallHandler): Observable {\n        const startTime = new Date().getTime();\n        const ctx = context.switchToHttp();\n        const request = ctx.getRequest();\n        const statusCode = ctx.getResponse().statusCode;\n        const userId = request.user ? request.user.sub : '-';\n\n        return next.handle().pipe(\n            map((data) => {\n                this.logger.info(\n                    `${this.getTimeDelta(startTime)}ms ${userId} ${\n                        request.ip\n                    } ${statusCode} ${request.method} ${this.getUrl(request)}`\n                );\n\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const response: any = {\n                    data,\n                    httpCode: statusCode,\n                    path: request.url,\n                    timestamp: new Date().toISOString\n                };\n                return response;\n            })\n        );\n    }\n\n    private getTimeDelta(startTime: number): number {\n        return new Date().getTime() - startTime;\n    }\n\n    private getUrl(request: Request): string {\n        return `${request.protocol}://${request.get('host')}${request.originalUrl}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerService.html":{"url":"classes/LoggerService.html","title":"class - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/providers/logger.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/providers/logger.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/common/providers/logger.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/providers/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/providers/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/providers/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as winston from 'winston';\nimport * as WinstonCloudWatch from 'winston-cloudwatch';\nimport { isDeploymentEnv } from '../utilities';\nimport { configProvider } from './config.provider';\n\nexport class LoggerService {\n    private readonly instance: winston.Logger;\n\n    public constructor() {\n        const cloudwatchConfig = {\n            name: 'cloud watch log',\n            logGroupName: configProvider().CLOUDWATCH_GROUP_NAME,\n            logStreamName: configProvider().CLOUDWATCH_LOG_STREAM_NAME,\n            awsAccessKeyId: configProvider().AWS_ACCESS_KEY,\n            awsSecretKey: configProvider().AWS_SECRET_KEY,\n            awsRegion: configProvider().AWS_REGION,\n            messageFormatter: ({ level, message, stack }) => {\n                if (stack) {\n                    return `[${level}]  :   ${message}\\n -  ${stack}`;\n                }\n\n                return `[${level}]  :   ${message}`;\n            }\n        };\n\n        const format = isDeploymentEnv()\n            ? winston.format.combine(\n                  winston.format.timestamp(),\n                  winston.format.json(),\n                  winston.format.errors({ stack: true })\n              )\n            : winston.format.combine(\n                  winston.format.colorize(),\n                  winston.format.simple(),\n                  winston.format.errors({ stack: true })\n              );\n\n        this.instance = winston.createLogger({\n            level: 'info',\n            silent: false,\n            format,\n            transports: [\n                new winston.transports.Console({\n                    stderrLevels: ['error']\n                })\n            ]\n        });\n        this.instance.add(new WinstonCloudWatch(cloudwatchConfig));\n    }\n\n    public info(message: string): void {\n        this.instance.info(message);\n    }\n\n    public warn(message: string): void {\n        this.instance.warn(message);\n    }\n\n    public error(message: string, error?: Error): void {\n        this.instance.error(message, error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Passenger.html":{"url":"entities/Passenger.html","title":"entity - Passenger","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Passenger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/passenger/model/passenger.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'passengers' })\nexport class Passenger {\n    @PrimaryGeneratedColumn()\n    public id: number;\n\n    @Column()\n    public firstName: string;\n\n    @Column({ nullable: true })\n    public middleName: string;\n\n    @Column()\n    public lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PassengerController.html":{"url":"controllers/PassengerController.html","title":"controller - PassengerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PassengerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/passenger/controller/passenger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passengers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: PassengerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)@ApiResponse({status: undefined, type: Passenger})\n                \n            \n\n            \n                \n                    Defined in src/modules/passenger/controller/passenger.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                PassengerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, isArray: false, type: Passenger})\n                \n            \n\n            \n                \n                    Defined in src/modules/passenger/controller/passenger.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Post, HttpCode } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { LoggerService } from '../../common/providers';\nimport { Passenger, PassengerInput } from '../model';\nimport { PassengerService } from '../services';\n\n@Controller('passengers')\n@ApiTags('passenger')\n@ApiBearerAuth()\nexport class PassengerController {\n    public constructor(\n        private readonly logger: LoggerService,\n        private readonly passengerService: PassengerService\n    ) {}\n\n    @Get()\n    @HttpCode(HttpStatus.OK)\n    @ApiResponse({ status: HttpStatus.OK, isArray: false, type: Passenger })\n    public async find(): Promise {\n        this.logger.info('Getting data for passengers');\n        return this.passengerService.find();\n    }\n\n    @Post()\n    @HttpCode(HttpStatus.CREATED)\n    @ApiResponse({ status: HttpStatus.CREATED, type: Passenger })\n    public async create(@Body() input: PassengerInput): Promise {\n        const passenger = await this.passengerService.create(input);\n        this.logger.info(`Created new passenger with ID ${passenger.id}`);\n\n        return passenger;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PassengerInput.html":{"url":"classes/PassengerInput.html","title":"class - PassengerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PassengerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/passenger/model/passenger.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                firstName\n                            \n                            \n                                    Public\n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.input.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/passenger/model/passenger.input.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PassengerInput {\n    @ApiProperty()\n    public readonly firstName: string;\n\n    @ApiProperty()\n    public readonly lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PassengerModule.html":{"url":"modules/PassengerModule.html","title":"module - PassengerModule","body":"\n                   \n\n\n\n\n    Modules\n    PassengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PassengerModule\n\n\n\ncluster_PassengerModule_imports\n\n\n\ncluster_PassengerModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPassengerModule\n\nPassengerModule\n\nPassengerModule -->\n\nCommonModule->PassengerModule\n\n\n\n\n\nPassengerService\n\nPassengerService\n\nPassengerModule -->\n\nPassengerService->PassengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/passenger/passenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PassengerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PassengerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CommonModule } from '../common';\nimport { PassengerController } from './controller';\nimport { Passenger } from './model';\nimport { PassengerService } from './services';\n\n@Module({\n    imports: [CommonModule, TypeOrmModule.forFeature([Passenger])],\n    providers: [PassengerService],\n    controllers: [PassengerController],\n    exports: []\n})\nexport class PassengerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PassengerService.html":{"url":"injectables/PassengerService.html","title":"injectable - PassengerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PassengerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/passenger/services/passenger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(passengerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/passenger/services/passenger.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        passengerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: PassengerInput)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/passenger/services/passenger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                PassengerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/passenger/services/passenger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Passenger, PassengerInput } from '../model';\n\n@Injectable()\nexport class PassengerService {\n    public constructor(\n        @InjectRepository(Passenger)\n        private readonly passengerRepository: Repository\n    ) {}\n\n    public async find(): Promise {\n        return this.passengerRepository.find();\n    }\n\n    public async create(input: PassengerInput): Promise {\n        return this.passengerRepository.save({ ...input });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WelcomeController.html":{"url":"controllers/WelcomeController.html","title":"controller - WelcomeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WelcomeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/welcome.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version(VERSION_NEUTRAL)@Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/modules/common/welcome.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    HttpCode,\n    HttpStatus,\n    Version,\n    VERSION_NEUTRAL\n} from '@nestjs/common';\nimport { VERSION } from './models/constants';\n\n@Controller()\nexport class WelcomeController {\n    @Version(VERSION_NEUTRAL)\n    @Get()\n    @HttpCode(HttpStatus.OK)\n    public login(): string {\n        return `Welcome, Build Version : ${VERSION}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/common/interceptors/log.interceptor.ts\n            \n            injectable\n            LogInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/common/interfaces/config.interface.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            ANONYMOUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            API_DEFAULT_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            API_DEFAULT_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            SWAGGER_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            SWAGGER_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            SWAGGER_TITLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/models/constants.ts\n            \n            variable\n            VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/providers/config.provider.ts\n            \n            variable\n            configProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/providers/logger.service.ts\n            \n            class\n            LoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/common/utilities/check-environment.ts\n            \n            function\n            isProductionEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/utilities/check-environment.ts\n            \n            variable\n            isDeploymentEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/welcome.controller.ts\n            \n            controller\n            WelcomeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/passenger/controller/passenger.controller.ts\n            \n            controller\n            PassengerController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/passenger/model/passenger.entity.ts\n            \n            entity\n            Passenger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/passenger/model/passenger.input.ts\n            \n            class\n            PassengerInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/passenger/services/passenger.service.ts\n            \n            injectable\n            PassengerService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-cloudwatch-logs : ^3.150.0\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^9.0.9\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^9.0.9\n        \n            @nestjs/platform-express : ^9.0.11\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            helmet : ^5.1.1\n        \n            lodash : ^4.17.21\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.7\n        \n            winston : ^3.3.3\n        \n            winston-cloudwatch : ^6.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                        \n                            isProductionEnv   (src/.../check-environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSwagger\n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/common/utilities/check-environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProductionEnv\n                        \n                    \n                \n            \n            \n                \nisProductionEnv()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n1. Getting started\n1.1 Requirements\nBefore starting, make sure you have at least those components on your workstation:\n\nAn up-to-date release of NodeJS and NPM\nA PostgreSQL database.\n\n1.2 Project configuration\nStart by installing all the dependencies of the project.\nnpm installOnce the dependencies are installed, you can now configure your project by creating a new .env file containing your environment variables used for development.\n.env1.3 Launch and discover\nYou are now ready to launch the NestJS application using the command below.\n\n# Launch the development server with TSNode\nnpm run devYou can now head to http://localhost:4000/docs and see your API Swagger docs. The example passenger API is located at the http://localhost:4000/api/v1/passengers endpoint.\n2. Project structure\nThis template was made with a well-defined directory structure.\nsrc/\n├── migrations/  # TypeORM migrations created using \"npm run migration:create\"\n├── modules\n│   ├── app.module.ts\n│   ├── common/  # The common module contains pipes, guards, service and provider used in the whole application\n│   ├── passenger/  # A module example that manages \"passenger\" resources\n│   │   ├── controller/\n│   │   │   └── passenger.controller.ts\n│   │   ├── flow/  # The \"flow\" directory contains the pipes, interceptors and everything that may change the request or response flow\n│   │   │   └── passenger.pipe.ts\n│   │   ├── model/\n│   │   │   ├── passenger.data.ts  # The model that will be returned in the response\n│   │   │   ├── passenger.entity.ts  # The actual TypeORM entity\n│   │   │   └── passenger.input.ts  # The model that is used in the request\n│   │   ├── passenger.module.ts\n│   │   ├── service/\n│   │   │   └── passenger.service.ts\n│   │   └── spec/\n│   └── tokens.ts\n└── server.ts3. Default NPM commands\nThe NPM commands below are already included with this template and can be used to quickly run, build and test your project.\n\n# Run the application using \"ts-node\"\nnpm run dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PassengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_PassengerModule\n\n\n\ncluster_PassengerModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPassengerModule\n\nPassengerModule\n\nPassengerModule -->\n\nCommonModule->PassengerModule\n\n\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nCommonModule->ApplicationModule\n\n\n\n\n\nLogInterceptor \n\nLogInterceptor \n\nLogInterceptor  -->\n\nCommonModule->LogInterceptor \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCommonModule->LoggerService \n\n\n\nApplicationModule -->\n\nPassengerModule->ApplicationModule\n\n\n\n\n\nLogInterceptor\n\nLogInterceptor\n\nCommonModule -->\n\nLogInterceptor->CommonModule\n\n\n\n\n\nPassengerService\n\nPassengerService\n\nPassengerModule -->\n\nPassengerService->PassengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : NestJS API project \n        \n            Author : Chandra shekhar neupane\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ANONYMOUS   (src/.../constants.ts)\n                        \n                        \n                            API_DEFAULT_PORT   (src/.../constants.ts)\n                        \n                        \n                            API_DEFAULT_PREFIX   (src/.../constants.ts)\n                        \n                        \n                            configProvider   (src/.../config.provider.ts)\n                        \n                        \n                            isDeploymentEnv   (src/.../check-environment.ts)\n                        \n                        \n                            SWAGGER_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_PREFIX   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_TITLE   (src/.../constants.ts)\n                        \n                        \n                            VERSION   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/models/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ANONYMOUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Anonymous'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_DEFAULT_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_DEFAULT_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API Documentation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/docs'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SWAGGER_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Swagger API'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0.1'\n                    \n                \n\n\n        \n    \n\n    src/modules/common/providers/config.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IConfig => {\n    const env = process.env;\n\n    const validationSchema = Joi.object().unknown().keys({\n        API_PORT: Joi.string().required(),\n        SWAGGER_ENABLE: Joi.string().required(),\n\n        TYPEORM_HOST: Joi.string().required(),\n        TYPEORM_PORT: Joi.string().required(),\n        TYPEORM_USERNAME: Joi.string().required(),\n        TYPEORM_PASSWORD: Joi.string().required(),\n        TYPEORM_DATABASE: Joi.string().required(),\n        TYPEORM_SYNCHRONIZE: Joi.string().required(),\n        TYPEORM_MIGRATIONS_AUTO_RUN: Joi.string().required(),\n\n        CLOUDWATCH_GROUP_NAME: Joi.string().required(),\n        CLOUDWATCH_LOG_STREAM_NAME: Joi.string().required(),\n        AWS_ACCESS_KEY: Joi.string().required(),\n        AWS_SECRET_KEY: Joi.string().required(),\n        AWS_REGION: Joi.string().required()\n    });\n\n    const result = validationSchema.validate(env);\n\n    if (result.error) {\n        throw new Error(`Configuration not valid: ${result.error.message}`);\n    }\n\n    return {\n        API_PORT: _.toNumber(env.API_PORT) || API_DEFAULT_PORT,\n        API_PREFIX: env.API_PREFIX || API_DEFAULT_PREFIX,\n        SWAGGER_ENABLE: env.SWAGGER_ENABLE === 'true',\n\n        TYPEORM_CONNECTION: `${env.TYPEORM_CONNECTION}`,\n        TYPEORM_HOST: `${env.TYPEORM_HOST}`,\n        TYPEORM_PORT: _.toNumber(env.TYPEORM_PORT),\n        TYPEORM_USERNAME: `${env.TYPEORM_USERNAME}`,\n        TYPEORM_PASSWORD: `${env.TYPEORM_PASSWORD}`,\n        TYPEORM_DATABASE: `${env.TYPEORM_DATABASE}`,\n        TYPEORM_ENTITIES: `${env.TYPEORM_ENTITIES}`,\n        TYPEORM_SYNCHRONIZE: env.TYPEORM_SYNCHRONIZE === 'true',\n        TYPEORM_MIGRATIONS_AUTO_RUN: env.TYPEORM_MIGRATIONS_AUTO_RUN === 'true',\n\n        CLOUDWATCH_GROUP_NAME: `${env.CLOUDWATCH_GROUP_NAME}`,\n        CLOUDWATCH_LOG_STREAM_NAME: `${env.CLOUDWATCH_LOG_STREAM_NAME}`,\n        AWS_ACCESS_KEY: `${env.AWS_ACCESS_KEY}`,\n        AWS_SECRET_KEY: `${env.AWS_SECRET_KEY}`,\n        AWS_REGION: `${env.AWS_REGION}`\n    };\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/common/utilities/check-environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDeploymentEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): boolean => {\n    const ENV = process.env.NODE_ENV || '';\n    return ENV.trim() === 'production' || ENV.trim() === 'staging';\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
